{"ast":null,"code":"import React,{useEffect,useState}from'react';import{BrowserRouter as Router,Route,Routes,Navigate}from'react-router-dom';import Header from'./components/Header';import Sidebar from'./components/Sidebar';import Dashboard from'./components/Dashboard';import SearchPage from'./components/SearchPage';import CollectedProducts from'./components/CollectedProducts';import TaobaoMatch from'./components/TaobaoMatch';import Login from'./components/Login';import Signup from'./components/Signup';import MarketManagement from'./components/MarketManagement';import api from'./utils/api';import'./styles/main.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const checkLoginStatus=async()=>{const token=localStorage.getItem('token');const uid=localStorage.getItem('uid');if(token&&uid){try{const response=await api.get('/user-info');if(response.data){setIsLoggedIn(true);localStorage.setItem('userInfo',JSON.stringify(response.data));}}catch(error){console.error('Auth check failed:',error);handleLogout();}}setLoading(false);};checkLoginStatus();},[]);useEffect(()=>{// API 연결 테스트\nconst testConnection=async()=>{try{await api.get('/ping');console.log('API 연결 성공');}catch(error){console.error('API 연결 실패:',error);}};testConnection();},[]);const handleLogout=()=>{setIsLoggedIn(false);localStorage.clear();window.location.href='/login';};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// 또는 로딩 스피너 컴포넌트\n}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{isLoggedIn:isLoggedIn,onLogout:handleLogout}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[isLoggedIn&&/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(\"main\",{className:\"content\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:isLoggedIn?/*#__PURE__*/_jsx(Dashboard,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/search\",element:isLoggedIn?/*#__PURE__*/_jsx(SearchPage,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/collected\",element:isLoggedIn?/*#__PURE__*/_jsx(CollectedProducts,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/taobao-match\",element:isLoggedIn?/*#__PURE__*/_jsx(TaobaoMatch,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(Signup,{})}),/*#__PURE__*/_jsx(Route,{path:\"/markets\",element:isLoggedIn?/*#__PURE__*/_jsx(MarketManagement,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"})})]})})]})]})});}export default App;","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Navigate","Header","Sidebar","Dashboard","SearchPage","CollectedProducts","TaobaoMatch","Login","Signup","MarketManagement","api","jsx","_jsx","jsxs","_jsxs","App","isLoggedIn","setIsLoggedIn","loading","setLoading","checkLoginStatus","token","localStorage","getItem","uid","response","get","data","setItem","JSON","stringify","error","console","handleLogout","testConnection","log","clear","window","location","href","children","className","onLogout","path","element","to"],"sources":["C:/자동ai/front/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './components/Dashboard';\nimport SearchPage from './components/SearchPage';\nimport CollectedProducts from './components/CollectedProducts';\nimport TaobaoMatch from './components/TaobaoMatch';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport MarketManagement from './components/MarketManagement';\nimport api from './utils/api';\nimport './styles/main.css';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const checkLoginStatus = async () => {\n      const token = localStorage.getItem('token');\n      const uid = localStorage.getItem('uid');\n      \n      if (token && uid) {\n        try {\n          const response = await api.get('/user-info');\n          if (response.data) {\n            setIsLoggedIn(true);\n            localStorage.setItem('userInfo', JSON.stringify(response.data));\n          }\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          handleLogout();\n        }\n      }\n      setLoading(false);\n    };\n\n    checkLoginStatus();\n  }, []);\n\n  useEffect(() => {\n    // API 연결 테스트\n    const testConnection = async () => {\n      try {\n        await api.get('/ping');\n        console.log('API 연결 성공');\n      } catch (error) {\n        console.error('API 연결 실패:', error);\n      }\n    };\n    testConnection();\n  }, []);\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.clear();\n    window.location.href = '/login';\n  };\n\n  if (loading) {\n    return <div>Loading...</div>; // 또는 로딩 스피너 컴포넌트\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Header isLoggedIn={isLoggedIn} onLogout={handleLogout} />\n        <div className=\"main-container\">\n          {isLoggedIn && <Sidebar />}\n          <main className=\"content\">\n            <Routes>\n              <Route path=\"/dashboard\" element={isLoggedIn ? <Dashboard /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/search\" element={isLoggedIn ? <SearchPage /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/collected\" element={isLoggedIn ? <CollectedProducts /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/taobao-match\" element={isLoggedIn ? <TaobaoMatch /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/login\" element={<Login setIsLoggedIn={setIsLoggedIn} />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/markets\" element={isLoggedIn ? <MarketManagement /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/\" element={<Navigate to=\"/dashboard\" />} />\n            </Routes>\n          </main>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}