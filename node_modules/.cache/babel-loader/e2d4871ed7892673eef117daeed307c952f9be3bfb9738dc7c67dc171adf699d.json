{"ast":null,"code":"import axios from'axios';const api=axios.create({baseURL:process.env.NODE_ENV==='development'?'/api':process.env.REACT_APP_API_URL,headers:{'Content-Type':'application/json','ngrok-skip-browser-warning':'true'},withCredentials:false});// 요청 인터셉터\napi.interceptors.request.use(config=>{const uid=localStorage.getItem('uid');if(uid&&!config.url.includes('uid=')){const separator=config.url.includes('?')?'&':'?';config.url=`${config.url}${separator}uid=${uid}`;}return config;},error=>Promise.reject(error));// 응답 인터셉터\napi.interceptors.response.use(response=>response,async error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// 토큰 갱신 로직\ntry{const refreshToken=localStorage.getItem('refreshToken');if(refreshToken){const response=await api.post('/refresh_token',{refresh_token:refreshToken});localStorage.setItem('token',response.data.token);error.config.headers['Authorization']=`Bearer ${response.data.token}`;return api(error.config);}}catch(refreshError){localStorage.clear();window.location.href='/login';}}return Promise.reject(error);});// 인증 관련 API\nexport const login=async(email,password)=>{const response=await api.post('/login',{email,password});return response.data;};export const signup=async(email,password,name)=>{const response=await api.post('/signup',{email,password,name});return response.data;};// 상품 검색 및 수집 API\nexport const searchProducts=async keyword=>{const uid=localStorage.getItem('uid');const response=await api.post('/search',{keyword,uid});return response.data;};export const collectProducts=async(uid,selected_items)=>{const response=await api.post('/collect',{uid,selected_items});return response.data;};export const getCollectedProducts=async()=>{const uid=localStorage.getItem('uid');const response=await api.get(`/get_collected_products?uid=${uid}`);return response.data;};// 타오바오 매칭 API\nexport const matchTaobaoProduct=async imageUrl=>{const response=await api.post('/taobao_match',{image_url:imageUrl});return response.data;};export const batchTaobaoMatch=async productIds=>{const uid=localStorage.getItem('uid');const response=await api.post('/batch_taobao_match',{uid,productIds});return response.data;};// 헤이셀러 관련 API\nexport const downloadHeySeller=async selectedProducts=>{const uid=localStorage.getItem('uid');const response=await api.get(`/download_heyseller?uid=${uid}`,{responseType:'blob'});return response.data;};export const generateSEO=async productId=>{const uid=localStorage.getItem('uid');const response=await api.post('/generate_seo',{uid,product_id:productId});return response.data;};// 마켓 관리 API\nexport const getMarketDB=async uid=>{const response=await api.get(`/get_market_db?uid=${uid}`);return response.data;};export const addMarket=async(uid,marketData)=>{const response=await api.post('/add_market',{uid,marketData});return response.data;};export const updateMarket=async(uid,marketId,marketData)=>{const response=await api.put('/update_market',{uid,marketId,marketData});return response.data;};export const deleteMarket=async(uid,marketId)=>{const response=await api.delete('/delete_market',{data:{uid,marketId}});return response.data;};export const reverseMarket=async(uid,marketId)=>{const response=await api.post('/market_reversing',{uid,marketId});return response.data;};// 기본 API 인스턴스 export\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","NODE_ENV","REACT_APP_API_URL","headers","withCredentials","interceptors","request","use","config","uid","localStorage","getItem","url","includes","separator","error","Promise","reject","response","_error$response","status","refreshToken","post","refresh_token","setItem","data","token","refreshError","clear","window","location","href","login","email","password","signup","name","searchProducts","keyword","collectProducts","selected_items","getCollectedProducts","get","matchTaobaoProduct","imageUrl","image_url","batchTaobaoMatch","productIds","downloadHeySeller","selectedProducts","responseType","generateSEO","productId","product_id","getMarketDB","addMarket","marketData","updateMarket","marketId","put","deleteMarket","delete","reverseMarket"],"sources":["C:/자동ai/front/my-app/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: process.env.NODE_ENV === 'development' ? '/api' : process.env.REACT_APP_API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': 'true'\n    },\n    withCredentials: false\n});\n\n// 요청 인터셉터\napi.interceptors.request.use(\n    (config) => {\n        const uid = localStorage.getItem('uid');\n        if (uid && !config.url.includes('uid=')) {\n            const separator = config.url.includes('?') ? '&' : '?';\n            config.url = `${config.url}${separator}uid=${uid}`;\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n// 응답 인터셉터\napi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        if (error.response?.status === 401) {\n            // 토큰 갱신 로직\n            try {\n                const refreshToken = localStorage.getItem('refreshToken');\n                if (refreshToken) {\n                    const response = await api.post('/refresh_token', { refresh_token: refreshToken });\n                    localStorage.setItem('token', response.data.token);\n                    error.config.headers['Authorization'] = `Bearer ${response.data.token}`;\n                    return api(error.config);\n                }\n            } catch (refreshError) {\n                localStorage.clear();\n                window.location.href = '/login';\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n// 인증 관련 API\nexport const login = async (email, password) => {\n    const response = await api.post('/login', { email, password });\n    return response.data;\n};\n\nexport const signup = async (email, password, name) => {\n    const response = await api.post('/signup', { email, password, name });\n    return response.data;\n};\n\n// 상품 검색 및 수집 API\nexport const searchProducts = async (keyword) => {\n    const uid = localStorage.getItem('uid');\n    const response = await api.post('/search', { keyword, uid });\n    return response.data;\n};\n\nexport const collectProducts = async (uid, selected_items) => {\n    const response = await api.post('/collect', { uid, selected_items });\n    return response.data;\n};\n\nexport const getCollectedProducts = async () => {\n    const uid = localStorage.getItem('uid');\n    const response = await api.get(`/get_collected_products?uid=${uid}`);\n    return response.data;\n};\n\n// 타오바오 매칭 API\nexport const matchTaobaoProduct = async (imageUrl) => {\n    const response = await api.post('/taobao_match', { image_url: imageUrl });\n    return response.data;\n};\n\nexport const batchTaobaoMatch = async (productIds) => {\n    const uid = localStorage.getItem('uid');\n    const response = await api.post('/batch_taobao_match', { uid, productIds });\n    return response.data;\n};\n\n// 헤이셀러 관련 API\nexport const downloadHeySeller = async (selectedProducts) => {\n    const uid = localStorage.getItem('uid');\n    const response = await api.get(`/download_heyseller?uid=${uid}`, {\n        responseType: 'blob'\n    });\n    return response.data;\n};\n\nexport const generateSEO = async (productId) => {\n    const uid = localStorage.getItem('uid');\n    const response = await api.post('/generate_seo', { uid, product_id: productId });\n    return response.data;\n};\n\n// 마켓 관리 API\nexport const getMarketDB = async (uid) => {\n    const response = await api.get(`/get_market_db?uid=${uid}`);\n    return response.data;\n};\n\nexport const addMarket = async (uid, marketData) => {\n    const response = await api.post('/add_market', { uid, marketData });\n    return response.data;\n};\n\nexport const updateMarket = async (uid, marketId, marketData) => {\n    const response = await api.put('/update_market', { uid, marketId, marketData });\n    return response.data;\n};\n\nexport const deleteMarket = async (uid, marketId) => {\n    const response = await api.delete('/delete_market', { data: { uid, marketId } });\n    return response.data;\n};\n\nexport const reverseMarket = async (uid, marketId) => {\n    const response = await api.post('/market_reversing', { uid, marketId });\n    return response.data;\n};\n\n// 기본 API 인스턴스 export\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACrBC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAG,MAAM,CAAGF,OAAO,CAACC,GAAG,CAACE,iBAAiB,CACxFC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,4BAA4B,CAAE,MAClC,CAAC,CACDC,eAAe,CAAE,KACrB,CAAC,CAAC,CAEF;AACAR,GAAG,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,EAAK,CACR,KAAM,CAAAC,GAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CACvC,GAAIF,GAAG,EAAI,CAACD,MAAM,CAACI,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAE,CACrC,KAAM,CAAAC,SAAS,CAAGN,MAAM,CAACI,GAAG,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAG,GAAG,CAAG,GAAG,CACtDL,MAAM,CAACI,GAAG,CAAG,GAAGJ,MAAM,CAACI,GAAG,GAAGE,SAAS,OAAOL,GAAG,EAAE,CACtD,CACA,MAAO,CAAAD,MAAM,CACjB,CAAC,CACAO,KAAK,EAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC,CAED;AACAnB,GAAG,CAACS,YAAY,CAACa,QAAQ,CAACX,GAAG,CACxBW,QAAQ,EAAKA,QAAQ,CACtB,KAAO,CAAAH,KAAK,EAAK,KAAAI,eAAA,CACb,GAAI,EAAAA,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAChC;AACA,GAAI,CACA,KAAM,CAAAC,YAAY,CAAGX,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACzD,GAAIU,YAAY,CAAE,CACd,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,gBAAgB,CAAE,CAAEC,aAAa,CAAEF,YAAa,CAAC,CAAC,CAClFX,YAAY,CAACc,OAAO,CAAC,OAAO,CAAEN,QAAQ,CAACO,IAAI,CAACC,KAAK,CAAC,CAClDX,KAAK,CAACP,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUe,QAAQ,CAACO,IAAI,CAACC,KAAK,EAAE,CACvE,MAAO,CAAA9B,GAAG,CAACmB,KAAK,CAACP,MAAM,CAAC,CAC5B,CACJ,CAAE,MAAOmB,YAAY,CAAE,CACnBjB,YAAY,CAACkB,KAAK,CAAC,CAAC,CACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACnC,CACJ,CACA,MAAO,CAAAf,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAChC,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAiB,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAC5C,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,QAAQ,CAAE,CAAEW,KAAK,CAAEC,QAAS,CAAC,CAAC,CAC9D,MAAO,CAAAhB,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAAU,MAAM,CAAG,KAAAA,CAAOF,KAAK,CAAEC,QAAQ,CAAEE,IAAI,GAAK,CACnD,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,SAAS,CAAE,CAAEW,KAAK,CAAEC,QAAQ,CAAEE,IAAK,CAAC,CAAC,CACrE,MAAO,CAAAlB,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED;AACA,MAAO,MAAM,CAAAY,cAAc,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC7C,KAAM,CAAA7B,GAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CACvC,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,SAAS,CAAE,CAAEgB,OAAO,CAAE7B,GAAI,CAAC,CAAC,CAC5D,MAAO,CAAAS,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAAc,eAAe,CAAG,KAAAA,CAAO9B,GAAG,CAAE+B,cAAc,GAAK,CAC1D,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,UAAU,CAAE,CAAEb,GAAG,CAAE+B,cAAe,CAAC,CAAC,CACpE,MAAO,CAAAtB,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAAgB,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CAC5C,KAAM,CAAAhC,GAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CACvC,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC8C,GAAG,CAAC,+BAA+BjC,GAAG,EAAE,CAAC,CACpE,MAAO,CAAAS,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED;AACA,MAAO,MAAM,CAAAkB,kBAAkB,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAClD,KAAM,CAAA1B,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,eAAe,CAAE,CAAEuB,SAAS,CAAED,QAAS,CAAC,CAAC,CACzE,MAAO,CAAA1B,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAAqB,gBAAgB,CAAG,KAAO,CAAAC,UAAU,EAAK,CAClD,KAAM,CAAAtC,GAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CACvC,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,qBAAqB,CAAE,CAAEb,GAAG,CAAEsC,UAAW,CAAC,CAAC,CAC3E,MAAO,CAAA7B,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED;AACA,MAAO,MAAM,CAAAuB,iBAAiB,CAAG,KAAO,CAAAC,gBAAgB,EAAK,CACzD,KAAM,CAAAxC,GAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CACvC,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC8C,GAAG,CAAC,2BAA2BjC,GAAG,EAAE,CAAE,CAC7DyC,YAAY,CAAE,MAClB,CAAC,CAAC,CACF,MAAO,CAAAhC,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAA0B,WAAW,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC5C,KAAM,CAAA3C,GAAG,CAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CACvC,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,eAAe,CAAE,CAAEb,GAAG,CAAE4C,UAAU,CAAED,SAAU,CAAC,CAAC,CAChF,MAAO,CAAAlC,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED;AACA,MAAO,MAAM,CAAA6B,WAAW,CAAG,KAAO,CAAA7C,GAAG,EAAK,CACtC,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC8C,GAAG,CAAC,sBAAsBjC,GAAG,EAAE,CAAC,CAC3D,MAAO,CAAAS,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAA8B,SAAS,CAAG,KAAAA,CAAO9C,GAAG,CAAE+C,UAAU,GAAK,CAChD,KAAM,CAAAtC,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,aAAa,CAAE,CAAEb,GAAG,CAAE+C,UAAW,CAAC,CAAC,CACnE,MAAO,CAAAtC,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAAgC,YAAY,CAAG,KAAAA,CAAOhD,GAAG,CAAEiD,QAAQ,CAAEF,UAAU,GAAK,CAC7D,KAAM,CAAAtC,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC+D,GAAG,CAAC,gBAAgB,CAAE,CAAElD,GAAG,CAAEiD,QAAQ,CAAEF,UAAW,CAAC,CAAC,CAC/E,MAAO,CAAAtC,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAAmC,YAAY,CAAG,KAAAA,CAAOnD,GAAG,CAAEiD,QAAQ,GAAK,CACjD,KAAM,CAAAxC,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAACiE,MAAM,CAAC,gBAAgB,CAAE,CAAEpC,IAAI,CAAE,CAAEhB,GAAG,CAAEiD,QAAS,CAAE,CAAC,CAAC,CAChF,MAAO,CAAAxC,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED,MAAO,MAAM,CAAAqC,aAAa,CAAG,KAAAA,CAAOrD,GAAG,CAAEiD,QAAQ,GAAK,CAClD,KAAM,CAAAxC,QAAQ,CAAG,KAAM,CAAAtB,GAAG,CAAC0B,IAAI,CAAC,mBAAmB,CAAE,CAAEb,GAAG,CAAEiD,QAAS,CAAC,CAAC,CACvE,MAAO,CAAAxC,QAAQ,CAACO,IAAI,CACxB,CAAC,CAED;AACA,cAAe,CAAA7B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}