{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\uC790\\uB3D9ai\\\\front\\\\my-app\\\\src\\\\components\\\\MarketManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getMarketDB } from '../utils/api';\nimport api from '../utils/api';\nimport LoadingSpinner from './LoadingSpinner';\nimport ScrapingResults from './ScrapingResults';\nimport SellerInfo from './SellerInfo';\nimport '../styles/MarketManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MarketManagement = () => {\n  _s();\n  const [markets, setMarkets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedMarkets, setSelectedMarkets] = useState([]);\n  const [reversingInProgress, setReversingInProgress] = useState(false);\n  const [scrapedProducts, setScrapedProducts] = useState([]);\n  const [showScrapingResults, setShowScrapingResults] = useState(false);\n  const [selectedMarketId, setSelectedMarketId] = useState(null);\n  const [marketData, setMarketData] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const maxRetries = 3;\n  useEffect(() => {\n    const fetchMarketsWithRetry = async () => {\n      try {\n        setLoading(true);\n        const uid = localStorage.getItem('uid');\n        if (!uid) {\n          throw new Error('로그인이 필요합니다.');\n        }\n        const response = await getMarketDB(uid);\n        if (response.markets) {\n          setMarkets(response.markets);\n          setLoading(false);\n        } else {\n          throw new Error('마켓 데이터가 없습니다.');\n        }\n      } catch (err) {\n        console.error('마켓 정보 로딩 실패:', err);\n        if (retryCount < maxRetries) {\n          setTimeout(() => {\n            setRetryCount(prev => prev + 1);\n          }, 2000); // 2초 후 재시도\n        } else {\n          setError(err.message || '마켓 정보를 불러오는데 실패했습니다.');\n          setLoading(false);\n        }\n      }\n    };\n    fetchMarketsWithRetry();\n  }, [retryCount]);\n  const handleMarketSelect = marketId => {\n    setSelectedMarkets(prev => {\n      if (prev.includes(marketId)) {\n        return prev.filter(id => id !== marketId);\n      } else {\n        return [...prev, marketId];\n      }\n    });\n  };\n  const handleMarketClick = marketId => {\n    setSelectedMarketId(marketId === selectedMarketId ? null : marketId);\n  };\n  const handleCollectSelected = async selectedProductIds => {\n    if (!selectedProductIds.length) {\n      alert('수집할 상품을 선택해주세요.');\n      return;\n    }\n    try {\n      const uid = localStorage.getItem('uid');\n      await api.post('/collect', {\n        uid,\n        type: 'product',\n        selected_items: scrapedProducts.filter(p => selectedProductIds.includes(p.id))\n      });\n      alert('선택한 상품이 수집되었습니다.');\n      window.location.href = '/collected';\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('상품 수집 실패:', error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || '상품 수집 중 오류가 발생했습니다.');\n    }\n  };\n  const handleMarketReversing = async () => {\n    if (selectedMarkets.length === 0) {\n      alert('리버싱할 마켓을 선택해주세요.');\n      return;\n    }\n    setReversingInProgress(true);\n    setLoading(true);\n    try {\n      const uid = localStorage.getItem('uid');\n      const response = await api.post('/market_reversing', {\n        uid,\n        marketIds: selectedMarkets\n      });\n      if (response.data.products) {\n        setScrapedProducts(response.data.products);\n        setShowScrapingResults(true);\n        if (response.data.market_data) {\n          setMarketData(response.data.market_data);\n        }\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('마켓 리버싱 실패:', error);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || '마켓 리버싱 중 오류가 발생했습니다.');\n    } finally {\n      setReversingInProgress(false);\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n    message: \"\\uB9C8\\uCF13 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"market-management\",\n    children: [loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"\\uB9C8\\uCF13 \\uB370\\uC774\\uD130\\uB97C \\uC218\\uC9D1\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }, this), !showScrapingResults ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC218\\uC9D1\\uB41C \\uB9C8\\uCF13 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMarketReversing,\n          disabled: selectedMarkets.length === 0 || reversingInProgress,\n          className: \"reversing-button\",\n          children: reversingInProgress ? '리버싱 중...' : '마켓 리버싱'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markets-grid\",\n        children: markets.map((market, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedMarkets.includes(market.mallName),\n              onChange: () => handleMarketSelect(market.mallName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              onClick: () => handleMarketClick(market.mallName),\n              children: market.mallName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uB4F1\\uAE09:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 22\n              }, this), \" \", market.mallGrade || '정보 없음']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uC0C1\\uD488 \\uC218:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 22\n              }, this), \" \", market.productCount || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uCD5C\\uADFC \\uC5C5\\uB370\\uC774\\uD2B8:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 22\n              }, this), \" \", new Date(market.lastUpdated).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), selectedMarketId === market.mallName && /*#__PURE__*/_jsxDEV(SellerInfo, {\n            marketId: market.mallName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: market.mallUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"visit-button\",\n              children: \"\\uB9C8\\uCF13 \\uBC29\\uBB38\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), markets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-markets\",\n        children: \"\\uC218\\uC9D1\\uB41C \\uB9C8\\uCF13\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(ScrapingResults, {\n      products: scrapedProducts,\n      onCollectSelected: handleCollectSelected,\n      onBack: () => setShowScrapingResults(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketManagement, \"4iaDMM6ebxvdXi/zun60vnb292g=\");\n_c = MarketManagement;\nexport default MarketManagement;\nvar _c;\n$RefreshReg$(_c, \"MarketManagement\");","map":{"version":3,"names":["React","useState","useEffect","getMarketDB","api","LoadingSpinner","ScrapingResults","SellerInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","MarketManagement","_s","markets","setMarkets","loading","setLoading","error","setError","selectedMarkets","setSelectedMarkets","reversingInProgress","setReversingInProgress","scrapedProducts","setScrapedProducts","showScrapingResults","setShowScrapingResults","selectedMarketId","setSelectedMarketId","marketData","setMarketData","retryCount","setRetryCount","maxRetries","fetchMarketsWithRetry","uid","localStorage","getItem","Error","response","err","console","setTimeout","prev","message","handleMarketSelect","marketId","includes","filter","id","handleMarketClick","handleCollectSelected","selectedProductIds","length","alert","post","type","selected_items","p","window","location","href","_error$response","_error$response$data","data","handleMarketReversing","marketIds","products","market_data","_error$response2","_error$response2$data","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","disabled","map","market","index","checked","mallName","onChange","mallGrade","productCount","Date","lastUpdated","toLocaleDateString","mallUrl","target","rel","onCollectSelected","onBack","_c","$RefreshReg$"],"sources":["C:/자동ai/front/my-app/src/components/MarketManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getMarketDB } from '../utils/api';\r\nimport api from '../utils/api';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport ScrapingResults from './ScrapingResults';\r\nimport SellerInfo from './SellerInfo';\r\nimport '../styles/MarketManagement.css';\r\n\r\nconst MarketManagement = () => {\r\n  const [markets, setMarkets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedMarkets, setSelectedMarkets] = useState([]);\r\n  const [reversingInProgress, setReversingInProgress] = useState(false);\r\n  const [scrapedProducts, setScrapedProducts] = useState([]);\r\n  const [showScrapingResults, setShowScrapingResults] = useState(false);\r\n  const [selectedMarketId, setSelectedMarketId] = useState(null);\r\n  const [marketData, setMarketData] = useState(null);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const maxRetries = 3;\r\n\r\n  useEffect(() => {\r\n    const fetchMarketsWithRetry = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const uid = localStorage.getItem('uid');\r\n        if (!uid) {\r\n          throw new Error('로그인이 필요합니다.');\r\n        }\r\n\r\n        const response = await getMarketDB(uid);\r\n        if (response.markets) {\r\n          setMarkets(response.markets);\r\n          setLoading(false);\r\n        } else {\r\n          throw new Error('마켓 데이터가 없습니다.');\r\n        }\r\n      } catch (err) {\r\n        console.error('마켓 정보 로딩 실패:', err);\r\n        if (retryCount < maxRetries) {\r\n          setTimeout(() => {\r\n            setRetryCount(prev => prev + 1);\r\n          }, 2000); // 2초 후 재시도\r\n        } else {\r\n          setError(err.message || '마켓 정보를 불러오는데 실패했습니다.');\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchMarketsWithRetry();\r\n  }, [retryCount]);\r\n\r\n  const handleMarketSelect = (marketId) => {\r\n    setSelectedMarkets(prev => {\r\n      if (prev.includes(marketId)) {\r\n        return prev.filter(id => id !== marketId);\r\n      } else {\r\n        return [...prev, marketId];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleMarketClick = (marketId) => {\r\n    setSelectedMarketId(marketId === selectedMarketId ? null : marketId);\r\n  };\r\n\r\n  const handleCollectSelected = async (selectedProductIds) => {\r\n    if (!selectedProductIds.length) {\r\n      alert('수집할 상품을 선택해주세요.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const uid = localStorage.getItem('uid');\r\n      await api.post('/collect', {\r\n        uid,\r\n        type: 'product',\r\n        selected_items: scrapedProducts.filter(p => selectedProductIds.includes(p.id))\r\n      });\r\n      alert('선택한 상품이 수집되었습니다.');\r\n      window.location.href = '/collected';\r\n    } catch (error) {\r\n      console.error('상품 수집 실패:', error);\r\n      alert(error.response?.data?.error || '상품 수집 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleMarketReversing = async () => {\r\n    if (selectedMarkets.length === 0) {\r\n      alert('리버싱할 마켓을 선택해주세요.');\r\n      return;\r\n    }\r\n\r\n    setReversingInProgress(true);\r\n    setLoading(true);\r\n    try {\r\n      const uid = localStorage.getItem('uid');\r\n      const response = await api.post('/market_reversing', {\r\n        uid,\r\n        marketIds: selectedMarkets\r\n      });\r\n\r\n      if (response.data.products) {\r\n        setScrapedProducts(response.data.products);\r\n        setShowScrapingResults(true);\r\n        \r\n        if (response.data.market_data) {\r\n          setMarketData(response.data.market_data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('마켓 리버싱 실패:', error);\r\n      alert(error.response?.data?.error || '마켓 리버싱 중 오류가 발생했습니다.');\r\n    } finally {\r\n      setReversingInProgress(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingSpinner message=\"마켓 정보를 불러오고 있습니다...\" />;\r\n  if (error) return <div className=\"error-message\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"market-management\">\r\n      {loading && <LoadingSpinner message=\"마켓 데이터를 수집하고 있습니다...\" />}\r\n      \r\n      {!showScrapingResults ? (\r\n        <>\r\n          <h2>수집된 마켓 목록</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleMarketReversing}\r\n              disabled={selectedMarkets.length === 0 || reversingInProgress}\r\n              className=\"reversing-button\"\r\n            >\r\n              {reversingInProgress ? '리버싱 중...' : '마켓 리버싱'}\r\n            </button>\r\n          </div>\r\n          <div className=\"markets-grid\">\r\n            {markets.map((market, index) => (\r\n              <div key={index} className=\"market-card\">\r\n                <div className=\"market-header\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedMarkets.includes(market.mallName)}\r\n                    onChange={() => handleMarketSelect(market.mallName)}\r\n                  />\r\n                  <h3 onClick={() => handleMarketClick(market.mallName)}>\r\n                    {market.mallName}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"market-info\">\r\n                  <p><strong>등급:</strong> {market.mallGrade || '정보 없음'}</p>\r\n                  <p><strong>상품 수:</strong> {market.productCount || 0}</p>\r\n                  <p><strong>최근 업데이트:</strong> {new Date(market.lastUpdated).toLocaleDateString()}</p>\r\n                </div>\r\n                {selectedMarketId === market.mallName && (\r\n                  <SellerInfo marketId={market.mallName} />\r\n                )}\r\n                <div className=\"market-actions\">\r\n                  <a \r\n                    href={market.mallUrl} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\" \r\n                    className=\"visit-button\"\r\n                  >\r\n                    마켓 방문\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {markets.length === 0 && (\r\n            <div className=\"no-markets\">\r\n              수집된 마켓이 없습니다.\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <ScrapingResults \r\n          products={scrapedProducts}\r\n          onCollectSelected={handleCollectSelected}\r\n          onBack={() => setShowScrapingResults(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}