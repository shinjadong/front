{"ast":null,"code":"import axios from 'axios';\n\n// 고정 ngrok URL 사용\nconst API_BASE_URL = 'https://moray-leading-jolly.ngrok-free.app';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// 요청 인터셉터\napi.interceptors.request.use(config => {\n  // CORS 관련 설정\n  config.withCredentials = false;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 응답 인터셉터\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    console.error('Error Response:', error.response.data);\n  }\n  return Promise.reject(error);\n});\n\n// 요청 인터셉터\napi.interceptors.request.use(config => {\n  config.withCredentials = false;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 기본 API 함수들\nexport const signup = async (email, password, name) => {\n  try {\n    console.log('Sending signup request to:', API_BASE_URL + '/signup');\n    console.log('Request data:', {\n      email,\n      name\n    });\n    const response = await api.post('/signup', {\n      email,\n      password,\n      name\n    });\n    console.log('Signup response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response3;\n    console.error('Signup error:', {\n      message: error.message,\n      response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n      status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n      headers: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.headers\n    });\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/login', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error.response || error);\n    throw error;\n  }\n};\nexport const getUserInfo = async () => {\n  const uid = localStorage.getItem('uid');\n  try {\n    const response = await api.get(`/user-info?uid=${uid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Get user info error:', error.response || error);\n    throw error;\n  }\n};\n\n// 검색 및 수집 관련 API\nexport const searchProducts = async (keyword, uid) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/search`, {\n      keyword,\n      uid\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error('API Error:', error);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n  }\n};\nexport const collectProducts = async selectedProductIds => {\n  const uid = localStorage.getItem('uid');\n  try {\n    const response = await api.post('/collect', {\n      uid,\n      selected_product_ids: selectedProductIds\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Collect products error:', error.response || error);\n    throw error;\n  }\n};\n\n// 수집된 상품 관련 API\nexport const getCollectedProducts = async () => {\n  const uid = localStorage.getItem('uid');\n  try {\n    const response = await api.get(`/get_collected_products?uid=${uid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Get collected products error:', error.response || error);\n    throw error;\n  }\n};\n\n// 타오바오 관련 API\nexport const matchTaobaoProduct = async imageUrl => {\n  const uid = localStorage.getItem('uid');\n  try {\n    const response = await api.post('/taobao_match', {\n      image_url: imageUrl,\n      uid\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Taobao match error:', error.response || error);\n    throw error;\n  }\n};\nexport const batchTaobaoMatch = async productIds => {\n  const uid = localStorage.getItem('uid');\n  try {\n    const response = await api.post('/batch_taobao_match', {\n      uid,\n      productIds\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Batch taobao match error:', error.response || error);\n    throw error;\n  }\n};\n\n// 헤이셀러 관련 API\nexport const downloadHeySeller = async () => {\n  const uid = localStorage.getItem('uid');\n  try {\n    const response = await api.get(`/download_heyseller?uid=${uid}`, {\n      responseType: 'blob'\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Download heyseller error:', error.response || error);\n    throw error;\n  }\n};\n\n// SEO 관련 API\nexport const generateSEO = async productId => {\n  const uid = localStorage.getItem('uid');\n  try {\n    const response = await api.post('/generate_seo', {\n      uid,\n      product_id: productId\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Generate SEO error:', error.response || error);\n    throw error;\n  }\n};\n\n// 마켓 DB 조회\nexport const getMarketDB = async uid => {\n  try {\n    const response = await api.get(`/get_market_db?uid=${uid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Get market DB error:', error.response || error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","withCredentials","error","Promise","reject","response","console","data","signup","email","password","name","log","post","_error$response","_error$response2","_error$response3","message","status","login","getUserInfo","uid","localStorage","getItem","get","searchProducts","keyword","_error$response4","collectProducts","selectedProductIds","selected_product_ids","getCollectedProducts","matchTaobaoProduct","imageUrl","image_url","batchTaobaoMatch","productIds","downloadHeySeller","responseType","generateSEO","productId","product_id","getMarketDB"],"sources":["C:/자동ai/front/my-app/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// 고정 ngrok URL 사용\nconst API_BASE_URL = 'https://moray-leading-jolly.ngrok-free.app';\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    }\n});\n\n// 요청 인터셉터\napi.interceptors.request.use(\n    (config) => {\n        // CORS 관련 설정\n        config.withCredentials = false;\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// 응답 인터셉터\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        console.error('API Error:', error);\n        if (error.response) {\n            console.error('Error Response:', error.response.data);\n        }\n        return Promise.reject(error);\n    }\n);\n\n// 요청 인터셉터\napi.interceptors.request.use(\n    (config) => {\n        config.withCredentials = false;\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// 기본 API 함수들\nexport const signup = async (email, password, name) => {\n    try {\n        console.log('Sending signup request to:', API_BASE_URL + '/signup');\n        console.log('Request data:', { email, name });\n        \n        const response = await api.post('/signup', {\n            email,\n            password,\n            name\n        });\n        \n        console.log('Signup response:', response.data);\n        return response.data;\n    } catch (error) {\n        console.error('Signup error:', {\n            message: error.message,\n            response: error.response?.data,\n            status: error.response?.status,\n            headers: error.response?.headers\n        });\n        throw error;\n    }\n};\n\nexport const login = async (email, password) => {\n    try {\n        const response = await api.post('/login', { email, password });\n        return response.data;\n    } catch (error) {\n        console.error('Login error:', error.response || error);\n        throw error;\n    }\n};\n\nexport const getUserInfo = async () => {\n    const uid = localStorage.getItem('uid');\n    try {\n        const response = await api.get(`/user-info?uid=${uid}`);\n        return response.data;\n    } catch (error) {\n        console.error('Get user info error:', error.response || error);\n        throw error;\n    }\n};\n\n// 검색 및 수집 관련 API\nexport const searchProducts = async (keyword, uid) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/search`, {\n            keyword,\n            uid\n        });\n        return response.data;\n    } catch (error) {\n        console.error('API Error:', error);\n        throw error.response?.data || error;\n    }\n};\n\nexport const collectProducts = async (selectedProductIds) => {\n    const uid = localStorage.getItem('uid');\n    try {\n        const response = await api.post('/collect', {\n            uid,\n            selected_product_ids: selectedProductIds\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Collect products error:', error.response || error);\n        throw error;\n    }\n};\n\n// 수집된 상품 관련 API\nexport const getCollectedProducts = async () => {\n    const uid = localStorage.getItem('uid');\n    try {\n        const response = await api.get(`/get_collected_products?uid=${uid}`);\n        return response.data;\n    } catch (error) {\n        console.error('Get collected products error:', error.response || error);\n        throw error;\n    }\n};\n\n// 타오바오 관련 API\nexport const matchTaobaoProduct = async (imageUrl) => {\n    const uid = localStorage.getItem('uid');\n    try {\n        const response = await api.post('/taobao_match', { image_url: imageUrl, uid });\n        return response.data;\n    } catch (error) {\n        console.error('Taobao match error:', error.response || error);\n        throw error;\n    }\n};\n\nexport const batchTaobaoMatch = async (productIds) => {\n    const uid = localStorage.getItem('uid');\n    try {\n        const response = await api.post('/batch_taobao_match', { uid, productIds });\n        return response.data;\n    } catch (error) {\n        console.error('Batch taobao match error:', error.response || error);\n        throw error;\n    }\n};\n\n// 헤이셀러 관련 API\nexport const downloadHeySeller = async () => {\n    const uid = localStorage.getItem('uid');\n    try {\n        const response = await api.get(`/download_heyseller?uid=${uid}`, {\n            responseType: 'blob'\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Download heyseller error:', error.response || error);\n        throw error;\n    }\n};\n\n// SEO 관련 API\nexport const generateSEO = async (productId) => {\n    const uid = localStorage.getItem('uid');\n    try {\n        const response = await api.post('/generate_seo', { uid, product_id: productId });\n        return response.data;\n    } catch (error) {\n        console.error('Generate SEO error:', error.response || error);\n        throw error;\n    }\n};\n\n// 마켓 DB 조회\nexport const getMarketDB = async (uid) => {\n  try {\n    const response = await api.get(`/get_market_db?uid=${uid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Get market DB error:', error.response || error);\n    throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}